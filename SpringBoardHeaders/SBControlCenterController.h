/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "SpringBoard-Structs.h"
#import "SBControlCenterViewControllerDelegate.h"

@class _UIBackdropView, SBControlCenterViewController, NSMutableSet, NSHashTable, SBApplication, SBControlCenterWindow, SBChevronView, SBControlCenterRootView, UIView;

__attribute__((visibility("hidden")))
@interface SBControlCenterController : XXUnknownSuperclass <SBControlCenterViewControllerDelegate> {
	SBControlCenterWindow* _window;
	SBControlCenterRootView* _rootView;
	SBControlCenterViewController* _viewController;
	UIView* _fullScreenGrabberContainer;
	_UIBackdropView* _fullScreenGrabberBackdrop;
	SBChevronView* _fullScreenChevron;
	NSMutableSet* _preventDismissalOnLockReasons;
	BOOL _uiLocked;
	NSHashTable* _observers;
	int _orientation;
	BOOL _animatingInitialPresentation;
	BOOL _gotFirstBackdropUpdate;
	BOOL _inGrabberOnlyMode;
	BOOL _presented;
	BOOL _transitioning;
	BOOL _fullyRevealed;
	SBApplication* _coveredApplication;
}
@property(assign, nonatomic, getter=isFullyRevealed) BOOL fullyRevealed;
@property(assign, nonatomic, getter=isTransitioning) BOOL transitioning;
@property(assign, nonatomic, getter=isPresented) BOOL presented;
@property(assign, nonatomic, getter=isUILocked) BOOL UILocked;
@property(retain, nonatomic) SBApplication* coveredApplication;
@property(assign, nonatomic) BOOL inGrabberOnlyMode;
+(void)notifyControlCenterControl:(id)control didActivate:(BOOL)activate;
+(id)sharedInstanceIfExists;
+(id)sharedInstance;
+(id)_sharedInstanceCreatingIfNeeded:(BOOL)needed;
-(void)controlCenterViewController:(id)controller backdropViewDidUpdate:(id)backdropView;
-(void)controlCenterViewController:(id)controller handlePan:(id)pan;
-(void)controlCenterViewController:(id)controller handleTap:(id)tap;
-(BOOL)controlCenterViewController:(id)controller canHandleGestureRecognizer:(id)recognizer;
-(void)controlCenterViewControllerWantsDismissal:(id)dismissal;
-(void)_finishPresenting:(BOOL)presenting completion:(id)completion;
-(void)_dismissWithDuration:(double)duration additionalAnimations:(id)animations completion:(id)completion;
-(void)dismissAnimated:(BOOL)animated withAdditionalAnimations:(id)additionalAnimations completion:(id)completion;
-(void)dismissAnimated:(BOOL)animated completion:(id)completion;
-(void)dismissAnimated:(BOOL)animated;
-(void)_presentWithDuration:(double)duration completion:(id)completion;
-(void)presentAnimated:(BOOL)animated;
-(void)presentAnimated:(BOOL)animated completion:(id)completion;
-(void)hideGrabberAnimated:(BOOL)animated completion:(id)completion;
-(void)hideGrabberAnimated:(BOOL)animated;
-(void)showGrabberAnimated:(BOOL)animated;
-(void)cancelTransition;
-(void)endTransitionWithVelocity:(CGPoint)velocity completion:(id)completion;
-(id)_createDynamicAnimationForShow:(BOOL)show currentValue:(double)value velocity:(double)velocity;
-(void)updateTransitionWithTouchLocation:(CGPoint)touchLocation velocity:(CGPoint)velocity;
-(void)beginTransitionWithTouchLocation:(CGPoint)touchLocation;
-(void)_endPresentation;
-(void)_beginPresentation;
-(BOOL)allowHideTransition;
-(BOOL)allowShowTransition;
-(BOOL)_allowsShowTransition;
-(void)_setNCGrabberHidden:(BOOL)hidden;
-(void)_updateGrabberVisibility;
-(void)_updateRevealPercentage:(float)percentage;
-(void)_revealSlidingViewToHeight:(float)height;
-(float)_controlCenterHeightForTouchLocation:(CGPoint)touchLocation;
-(float)_yValueForClosed;
-(float)_yValueForOpen;
-(BOOL)shouldAutorotateToInterfaceOrientation:(int)interfaceOrientation;
-(BOOL)shouldAutomaticallyForwardRotationMethods;
-(BOOL)shouldAutomaticallyForwardAppearanceMethods;
-(BOOL)wantsFullScreenLayout;
-(id)_window;
-(void)preventDismissalOnLock:(BOOL)lock forReason:(id)reason;
-(void)_dismissOnLock;
-(void)_uiRelockedNotification:(id)notification;
-(void)_lockStateChangedNotification:(id)notification;
-(BOOL)isGrabberVisible;
-(BOOL)isVisible;
-(void)loadView;
-(BOOL)handleMenuButtonTap;
-(void)removeObserver:(id)observer;
-(void)addObserver:(id)observer;
-(void)_enumerateObservers:(id)observers;
-(BOOL)isAvailableWhileLocked;
-(void)dealloc;
-(id)init;
@end

