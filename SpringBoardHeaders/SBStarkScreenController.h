/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "_UISettingsKeyObserver.h"
#import "SBAlertManagerDelegate.h"
#import "SBAlertManagerObserver.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "UIStatusBarStyleDelegate.h"

@class SBStarkLockOutViewController, SBStarkNotificationWindow, UIScreen, AVExternalDevice, SBAlertManager, UIWindow, SBStarkLockOutWindow, _UIBackdropView, SBStarkFakeIconOperationController, SBStarkScreenFocusController, NSTimer, SBStarkDefaultHostingWindow, SBCarDisplaySettings, SBStarkSiriWindow, SBStarkHomeController;
@protocol SBStarkScreenControllerDelegate, SBDisplayProtocol;

__attribute__((visibility("hidden")))
@interface SBStarkScreenController : XXUnknownSuperclass <SBAlertManagerDelegate, SBAlertManagerObserver, UIStatusBarStyleDelegate, _UISettingsKeyObserver> {
	UIScreen* _screen;
	SBCarDisplaySettings* _settings;
	id<SBStarkScreenControllerDelegate> _delegate;
	id<SBDisplayProtocol> _topDisplay;
	int _lockOutMode;
	NSTimer* _lockOutModeUpdateTimer;
	SBStarkLockOutViewController* _lockOutViewController;
	SBStarkLockOutWindow* _lockOutWindow;
	SBStarkDefaultHostingWindow* _defaultHostingWindow;
	SBStarkHomeController* _homeController;
	SBStarkNotificationWindow* _notificationWindow;
	SBStarkSiriWindow* _siriWindow;
	_UIBackdropView* _siriBackdropView;
	BOOL _showingSiri;
	SBAlertManager* _alertManager;
	id _starkScreenBorrowingToken;
	SBStarkScreenFocusController* _focusController;
	SBStarkFakeIconOperationController* _fakeIconOperationController;
	AVExternalDevice* _externalDevice;
}
@property(readonly, assign, nonatomic) SBAlertManager* alertManager;
@property(readonly, assign, nonatomic) UIWindow* animationWindow;
@property(readonly, assign, nonatomic) UIWindow* mainWindow;
@property(retain, nonatomic) id<SBDisplayProtocol> topDisplay;
@property(readonly, assign, nonatomic) int state;
@property(assign, nonatomic) id<SBStarkScreenControllerDelegate> delegate;
@property(readonly, assign, nonatomic) UIScreen* screen;
-(void)settings:(id)settings changedValueForKey:(id)key;
-(void)statusBar:(id)bar didTriggerButtonType:(int)type withAction:(int)action;
-(void)statusBar:(id)bar didAnimateFromHeight:(float)height toHeight:(float)height3 animation:(int)animation;
-(void)statusBar:(id)bar willAnimateFromHeight:(float)height toHeight:(float)height3 duration:(double)duration animation:(int)animation;
-(int)statusBar:(id)bar styleForRequestedStyle:(int)requestedStyle overrides:(int)overrides;
-(BOOL)allowNavigationOverrideStyle;
-(BOOL)allowInCallOverrideStyle;
-(void)alertManagerDidChangeTopAlert:(id)alertManager;
-(void)alertManager:(id)manager willTearDownAlertWindow:(id)window;
-(void)alertManager:(id)manager didDeactivateAlert:(id)alert top:(BOOL)top;
-(void)alertManager:(id)manager willActivateAlert:(id)alert overAlerts:(id)alerts;
-(BOOL)alertManager:(id)manager shouldDeactivateDismissedAlert:(id)alert;
-(id)alertManager:(id)manager newAlertWindowForLockAlerts:(BOOL)lockAlerts;
-(void)_showNowPlaying;
-(void)_createFakeIconOperationController;
-(void)_updateLockOutModeAfterDelay;
-(void)_updateLockOutMode;
-(void)_startInitialAppLaunchTimer;
-(void)_cancelInitialAppLaunchTimer;
-(void)_launchInitialAppIfNecessary;
-(BOOL)_shouldLaunchMapsAtConnect;
-(void)_takeScreenRequested:(id)requested;
-(void)_setShowingSiri:(BOOL)siri;
-(void)_dismissSiriWithDuration:(double)duration animations:(id)animations completion:(id)completion;
-(void)dismissSiriWithFade:(double)fade completion:(id)completion;
-(void)dismissSiri:(BOOL)siri completion:(id)completion;
-(void)presentSiri:(BOOL)siri viewController:(id)controller;
-(id)focusWindow;
-(void)updateStatusBarStateForDisplay:(id)display withAnimationFactory:(id)animationFactory;
-(void)handleLongBackPress;
-(void)handleUnhandledBack;
-(void)handleUncompletedAppLaunch;
-(void)setTopDisplay:(id)display withAnimationFactory:(id)animationFactory;
-(void)invalidate;
-(void)_tearDownAndInvalidate:(BOOL)invalidate;
-(void)dealloc;
-(id)init;
-(id)initWithScreen:(id)screen;
@end

